#include <Wire.h>
#include <RTClib.h>
#include <Encoder.h>

// === RTC ===
RTC_DS3231 rtc;

// === Rotary Encoder ===
Encoder myEnc(31, 32); // CLK, DT
const int encoderButtonPin = 33;
bool manualMode = false;
long lastEncoderPos = 0;

// === Časové proměnné ===
int hours = 0, minutes = 0, seconds = 0;

// === LED Piny ===
const int ledHoursTens[3] = {2, 3, 4};            // H10
const int ledHoursOnes[4] = {5, 6, 7, 8};         // H1
const int ledMinutesTens[3] = {9, 10, 11};        // M10
const int ledMinutesOnes[4] = {12, 13, 22, 23};   // M1
const int ledSecondsTens[3] = {24, 25, 26};       // S10
const int ledSecondsOnes[4] = {27, 28, 29, 30};   // S1

void setup() {
    Serial.begin(9600);
    Wire.begin();

    // RTC
    if (!rtc.begin()) {
        Serial.println("Chyba: RTC nenalezen!");
        while (1);
    }

    // rtc.adjust(DateTime(F(__DATE__), F(__TIME__))); // První nahrání → nastavit aktuální čas

    // Inicializace pinů
    for (int i = 0; i < 3; i++) {
        pinMode(ledHoursTens[i], OUTPUT);
        pinMode(ledMinutesTens[i], OUTPUT);
        pinMode(ledSecondsTens[i], OUTPUT);
    }
    for (int i = 0; i < 4; i++) {
        pinMode(ledHoursOnes[i], OUTPUT);
        pinMode(ledMinutesOnes[i], OUTPUT);
        pinMode(ledSecondsOnes[i], OUTPUT);
    }

    pinMode(encoderButtonPin, INPUT_PULLUP);
    lastEncoderPos = myEnc.read();
}

void loop() {
    // === Režim: RTC nebo Manuální ===
    if (!manualMode) {
        DateTime now = rtc.now();
        hours = now.hour();
        minutes = now.minute();
        seconds = now.second();
    } else {
        handleEncoderInput();
        seconds++;  // Simulace času i v manuálním režimu
        if (seconds >= 60) {
            seconds = 0;
            minutes++;
            if (minutes >= 60) {
                minutes = 0;
                hours = (hours + 1) % 24;
            }
        }
    }

    handleButton();  // Přepínání režimů
    updateLEDs();
    printBinaryTable();

    delay(1000);
}

// === Ovládání přes encoder v manuálním režimu ===
void handleEncoderInput() {
    long newPos = myEnc.read();
    if (abs(newPos - lastEncoderPos) >= 4) {
        if (newPos > lastEncoderPos) {
            minutes++;
            if (minutes >= 60) {
                minutes = 0;
                hours = (hours + 1) % 24;
            }
        } else {
            minutes--;
            if (minutes < 0) {
                minutes = 59;
                hours = (hours == 0) ? 23 : hours - 1;
            }
        }
        lastEncoderPos = newPos;
    }
}

// === Tlačítko pro přepínání režimu ===
void handleButton() {
    static bool lastState = HIGH;
    bool currentState = digitalRead(encoderButtonPin);
    if (lastState == HIGH && currentState == LOW) {
        manualMode = !manualMode;
        Serial.println(manualMode ? " Manuální režim" : " RTC režim");
        delay(300); // debounce
    }
    lastState = currentState;
}

// === Zobrazení času na LEDkách ===
void updateLEDs() {
    setBinaryLEDs(hours / 10, ledHoursTens, 3);
    setBinaryLEDs(hours % 10, ledHoursOnes, 4);
    setBinaryLEDs(minutes / 10, ledMinutesTens, 3);
    setBinaryLEDs(minutes % 10, ledMinutesOnes, 4);
    setBinaryLEDs(seconds / 10, ledSecondsTens, 3);
    setBinaryLEDs(seconds % 10, ledSecondsOnes, 4);
}

void setBinaryLEDs(int value, const int *pins, int size) {
    for (int i = 0; i < size; i++) {
        digitalWrite(pins[i], (value >> i) & 1);
    }
}

// === Výpis do sériového monitoru ===
void printBinaryTable() {
    Serial.print("\nČas: ");
    if (hours < 10) Serial.print("0");
    Serial.print(hours); Serial.print(":");
    if (minutes < 10) Serial.print("0");
    Serial.print(minutes); Serial.print(":");
    if (seconds < 10) Serial.print("0");
    Serial.println(seconds);
}
